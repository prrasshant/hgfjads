import os
import time
import xlwings as xw
from openpyxl import Workbook, load_workbook
from openpyxl.styles import Font, PatternFill, Alignment, Border, Side

OUT_FILE = os.path.abspath("ADP_Interactive_Dashboard(updated)3.xlsx")

def build_xlsm():
    # 0) Clean old file
    if os.path.exists(OUT_FILE):
        try:
            os.remove(OUT_FILE)
        except Exception as e:
            print("Could not remove existing file:", e)
            return

    # 1) Create workbook + base layout with xlwings (safe ops only)
    app = xw.App(visible=False)
    try:
        wb = app.books.add()
        sht = wb.sheets[0]
        sht.name = "Overview"

        # Column widths
        widths = [3, 20, 30, 3, 20, 20, 15, 15]
        for i, w in enumerate(widths, start=1):
            sht.api.Columns(i).ColumnWidth = w

        # Show/Hide window artifacts
        app.api.ActiveWindow.DisplayGridlines = True
        app.api.ActiveWindow.DisplayHeadings = False

        # Title
        header_color = (59, 89, 152)
        sht.range("B2:G3").merge()
        sht.range("B2").value = "PTD/YTD Results - USA"
        sht.range("B2").api.Font.Size = 18
        sht.range("B2").api.Font.Bold = True
        sht.range("B2").color = header_color
        sht.range("B2").api.Font.Color = 0xFFFFFF
        sht.range("B2").api.HorizontalAlignment = -4108
        sht.range("B2").api.VerticalAlignment = -4108

        # Client Info
        sht.range("B5:C9").color = (234, 242, 255)
        sht.range("B5:C5").merge(); sht.range("B5").value = "üë§ Client Information"
        sht.range("B5").api.Font.Size = 12
        sht.range("B5").api.Font.Bold = True
        sht.range("B5").api.Font.Color = 0xFFFFFF
        sht.range("B6").value = "Client Number:"; sht.range("C6").value = ""
        sht.range("B7").value = "Company Name:";  sht.range("C7").value = ""
        sht.range("B8").value = "Country:";       sht.range("C8").value = "USA"
        sht.range("B9").value = "Language:";      sht.range("C9").value = "English"

        # Contact
        sht.range("E5:G9").color = (234, 242, 255)
        sht.range("E5:G5").merge(); sht.range("E5").value = "üìû Contact Details"
        sht.range("E5").api.Font.Size = 12
        sht.range("E5").api.Font.Bold = True
        sht.range("E5").api.Font.Color = 0xFFFFFF
        sht.range("E6").value = "Name:"; sht.range("F6").value = ""; sht.range("F6:G6").merge()
        sht.range("E7").value = "Phone Number:"; sht.range("F7").value = ""; sht.range("F7:G7").merge()
        sht.range("E8").value = "Email:"; sht.range("F8").value = ""; sht.range("F8:G8").merge()
        sht.range("E9").value = "ADP Contact:"; sht.range("F9").value = ""; sht.range("F9:G9").merge()

        # Period
        sht.range("B11:C13").color = (234, 242, 255)
        sht.range("B11:C11").merge(); sht.range("B11").value = "üóìÔ∏è Period"
        sht.range("B11").api.Font.Size = 12
        sht.range("B11").api.Font.Bold = True
        sht.range("B11").api.Font.Color = 0x2F5496
        sht.range("B12").value = "Date Received:"; sht.range("C12").value = ""
        sht.range("B13").value = "Date Processed:"; sht.range("C13").value = ""

        # Transaction Overview header + labels
        sht.range("E11:G11").merge()
        sht.range("E11").value = "üßæ Transaction Overview"
        sht.range("E11").api.Font.Size = 12
        sht.range("E11").api.Font.Bold = True
        sht.range("E11").api.Font.Color = 0x2F5496

        # We will place a DropDown at E13; label in E12 and total in G12/G13
        sht.range("E12").value = "Record Types (click to expand)"
        sht.range("G12").value = "Total Records"

        # Create Data sheet (will be hidden later by openpyxl)
        data_sht = wb.sheets.add("Data")
        data_sht.range("A1").value = ["Record Type", "Record Count", "Display"]

        # Example dummy data ‚Äî replace later with your real data pipeline if needed
        sample = [
            ["Payroll", 120],
            ["Benefits", 75],
            ["Taxes", 50],
            ["HCM", 32],
            ["Time & Attendance", 41],
            ["Compliance", 27],
            ["Onboarding", 19],
            ["GL Mapping", 11]
        ]
        data_sht.range("A2").value = sample

        # Helper "Display" column: "Record Type ‚Äî Record Count"
        # Fill formula for first 1000 rows so the dropdown auto-updates
        for r in range(2, 1002):
            data_sht.range(f"C{r}").formula = f'=IF(A{r}<>"",A{r}&" ‚Äî "&TEXT(B{r},"0"),"")'

        # Put the total formula (counts number of record types)
        sht.range("G13").formula = "=COUNTA(Data!A2:A1000)"

        wb.save(OUT_FILE)
        wb.close()
    finally:
        app.quit()

    time.sleep(0.4)

    # 2) Styling, borders, protection via openpyxl
    wb2 = load_workbook(OUT_FILE)
    ws2 = wb2["Overview"]
    ws_data = wb2["Data"]

    # Hide Data sheet
    ws_data.sheet_state = "hidden"

    border = Border(left=Side(style='medium'), right=Side(style='medium'),
                    top=Side(style='medium'), bottom=Side(style='medium'))
    blue_fill = PatternFill("solid", fgColor="2F5496")
    gray_fill = PatternFill("solid", fgColor="D9D9D9")
    light_fill = PatternFill("solid", fgColor="F2F2F2")

    # Title styling
    ws2.merge_cells("B2:G3")
    title = ws2["B2"]
    title.font = Font(size=20, bold=True, color="FFFFFF")
    title.fill = blue_fill
    title.alignment = Alignment(horizontal="center", vertical="center")

    # Section headers
    for cell in ["B5", "E5", "B11", "E11"]:
        ws2[cell].font = Font(bold=True)
        ws2[cell].fill = gray_fill
        ws2[cell].border = border

    # Box borders for info areas
    for r in range(6, 10):
        for col in ["B", "C", "E", "F", "G"]:
            ws2[f"{col}{r}"].border = border
        ws2[f"B{r}"].font = Font(bold=True)
        ws2[f"E{r}"].font = Font(bold=True)

    # Period labels/borders
    for r in [12, 13]:
        ws2[f"B{r}"].font = Font(bold=True)
        ws2[f"B{r}"].border = border
        ws2[f"C{r}"].border = border

    # Transaction overview headers
    ws2["E12"].font = Font(bold=True)
    ws2["G12"].font = Font(bold=True)
    for c in ["E12", "G12"]:
        ws2[c].fill = light_fill
        ws2[c].border = border
        ws2[c].alignment = Alignment(horizontal="center")

    # Grid borders around the block
    for row in range(2, 15):
        if row in [4, 10, 14]:
            continue
        for col in ["B", "C", "D", "E", "F", "G"]:
            if col == "D" and row not in [2, 3]:
                continue
            ws2[f"{col}{row}"].border = border

    # Lock all cells
    for row in ws2.iter_rows():
        for cell in row:
            cell.protection = cell.protection.copy(locked=True)

    # Unlock input cells + linked cell for dropdown if needed
    input_cells = ["C6", "C7", "C12", "C13", "F6", "F7", "F8", "F9", "F13"]
    for c in input_cells:
        ws2[c].protection = ws2[c].protection.copy(locked=False)

    # Protect sheet (keep objects usable)
    ws2.protection.sheet = True
    ws2.protection.password = "adp123"
    ws2.protection.enable()

    wb2.save(OUT_FILE)
    wb2.close()

    time.sleep(0.3)

    # 3) Re-open with xlwings to add the Form Control DropDown (last step so it persists)
    app2 = xw.App(visible=False)
    try:
        wb3 = app2.books.open(OUT_FILE)
        sht = wb3.sheets["Overview"]

        # Temporarily unprotect to add the control
        try:
            sht.api.Unprotect(Password="adp123")
        except Exception:
            pass

        # Add a Form Control DropDown at E13 (expands on click, has scroll)
        left = sht.range("E13").left
        top = sht.range("E13").top
        width = 240
        height = 20

        # Excel constant for DropDown Form Control is 2 (xlDropDown)
        ddl = sht.api.Shapes.AddFormControl(2, left, top, width, height)
        # Use the concatenated "Display" column for list items
        ddl.ControlFormat.ListFillRange = "Data!C2:C1000"
        # How many lines to show when expanded (scrollbar appears automatically if needed)
        try:
            ddl.ControlFormat.DropDownLines = 10
        except Exception:
            pass
        # Optional: linked cell to capture selection index (1-based)
        ddl.ControlFormat.LinkedCell = "F13"

        # Re-protect the sheet
        try:
            sht.api.Protect(Password="adp123", UserInterfaceOnly=True)
        except Exception:
            sht.api.Protect(Password="adp123")

        wb3.save()
        wb3.close()
    finally:
        app2.quit()

    print("‚úÖ ADP_Interactive_Dashboard created at:", OUT_FILE)


if __name__ == "__main__":
    build_xlsm()
