from PyQt5 import QtWidgets, QtGui, QtCore
import sys
import pandas as pd

class Overview(QtWidgets.QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("PTD/YTD Results - USA")
        self.setGeometry(100, 100, 1100, 700)

        # Modern corporate theme
        self.setStyleSheet("""
            QWidget {
                background-color: #1f2937;
                color: #e5e7eb;
                font-family: Arial;
                font-size: 14px;
            }
            QLabel {
                font-size: 14px;
            }
            QLineEdit {
                background: #374151;
                color: #f9fafb;
                border: 1px solid #4b5563;
                border-radius: 4px;
                padding: 5px;
            }
            QLineEdit[readonly="true"] {
                background: #4b5563;
                color: #d1d5db;
            }
            QGroupBox {
                font-weight: bold;
                border: 2px solid #2563eb;
                border-radius: 8px;
                margin-top: 10px;
                background-color: #111827;
                padding: 10px;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                subcontrol-position: top center;
                padding: 0 5px;
                color: #60a5fa;
                font-size: 15px;
            }
            QPushButton {
                background-color: #2563eb;
                color: white;
                font-weight: bold;
                padding: 8px 15px;
                border-radius: 5px;
            }
            QPushButton:hover {
                background-color: #1d4ed8;
            }
            QTableWidget {
                background-color: #1f2937;
                gridline-color: #4b5563;
                border: 1px solid #374151;
            }
            QHeaderView::section {
                background-color: #2563eb;
                color: white;
                padding: 4px;
                border: none;
            }
        """)

        main_layout = QtWidgets.QVBoxLayout(self)
        main_layout.setSpacing(15)
        main_layout.setContentsMargins(20, 20, 20, 20)

        # Big Title
        header = QtWidgets.QLabel("PTD/YTD Results - USA")
        header.setFont(QtGui.QFont("Arial", 26, QtGui.QFont.Bold))
        header.setAlignment(QtCore.Qt.AlignCenter)
        header.setStyleSheet("color: #93c5fd; padding: 15px;")
        main_layout.addWidget(header)

        # Client Info Section
        client_info = QtWidgets.QGroupBox("Client Information")
        client_layout = QtWidgets.QFormLayout()
        client_layout.addRow("Client Number:", QtWidgets.QLineEdit())
        client_layout.addRow("Company Name:", QtWidgets.QLineEdit())

        country_field = QtWidgets.QLineEdit("USA")
        country_field.setReadOnly(True)
        country_field.setProperty("readonly", True)
        client_layout.addRow("Country:", country_field)

        language_field = QtWidgets.QLineEdit("English")
        language_field.setReadOnly(True)
        language_field.setProperty("readonly", True)
        client_layout.addRow("Language:", language_field)

        client_info.setLayout(client_layout)
        main_layout.addWidget(client_info)

        # Contact Info Section
        contact_info = QtWidgets.QGroupBox("Client Contact")
        contact_layout = QtWidgets.QFormLayout()
        contact_layout.addRow("Name:", QtWidgets.QLineEdit())
        contact_layout.addRow("Phone Number:", QtWidgets.QLineEdit())
        contact_layout.addRow("Email:", QtWidgets.QLineEdit())
        contact_layout.addRow("ADP Contact:", QtWidgets.QLineEdit())
        contact_info.setLayout(contact_layout)
        main_layout.addWidget(contact_info)

        # Period Section
        period_info = QtWidgets.QGroupBox("Period")
        period_layout = QtWidgets.QFormLayout()
        period_layout.addRow("Date Received:", QtWidgets.QLineEdit())
        period_layout.addRow("Date Processed:", QtWidgets.QLineEdit())
        period_info.setLayout(period_layout)
        main_layout.addWidget(period_info)

        # Transaction Overview Section
        trans_info = QtWidgets.QGroupBox("Transaction Overview")
        trans_layout = QtWidgets.QVBoxLayout()

        self.table = QtWidgets.QTableWidget()
        self.table.setColumnCount(2)
        self.table.setHorizontalHeaderLabels(["Record Type", "Record Count"])
        self.table.horizontalHeader().setSectionResizeMode(QtWidgets.QHeaderView.Stretch)

        trans_layout.addWidget(self.table)

        # Total Records Label
        self.total_records_label = QtWidgets.QLabel("Total Records: 0")
        self.total_records_label.setFont(QtGui.QFont("Arial", 12, QtGui.QFont.Bold))
        self.total_records_label.setStyleSheet("color: #fbbf24; padding-top: 5px;")
        trans_layout.addWidget(self.total_records_label)

        trans_info.setLayout(trans_layout)
        main_layout.addWidget(trans_info)

        # Buttons
        btn_layout = QtWidgets.QHBoxLayout()
        self.test_checkbox = QtWidgets.QCheckBox("Test Run (No Update)")
        btn_layout.addWidget(self.test_checkbox)
        btn_layout.addStretch()

        self.active_excel_btn = QtWidgets.QPushButton("Active Excel Sheet")
        self.active_excel_btn.clicked.connect(self.load_excel)
        btn_layout.addWidget(self.active_excel_btn)

        upload_btn = QtWidgets.QPushButton("Create Upload File")
        btn_layout.addWidget(upload_btn)

        import_btn = QtWidgets.QPushButton("Import Upload File")
        btn_layout.addWidget(import_btn)

        main_layout.addLayout(btn_layout)

    def load_excel(self):
        file_path, _ = QtWidgets.QFileDialog.getOpenFileName(self, "Open Excel File", "", "Excel Files (*.xlsx *.xls)")
        if file_path:
            df = pd.read_excel(file_path)

            self.table.setRowCount(len(df))
            for row in range(len(df)):
                self.table.setItem(row, 0, QtWidgets.QTableWidgetItem(str(df.iloc[row, 0])))
                self.table.setItem(row, 1, QtWidgets.QTableWidgetItem(str(df.iloc[row, 1])))

            # Update Total Records
            self.total_records_label.setText(f"Total Records: {len(df)}")

def run_app():
    app = QtWidgets.QApplication(sys.argv)
    main_win = Overview()
    main_win.show()
    app.exec_()

if __name__ == "__main__":
    run_app()
