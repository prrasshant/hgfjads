import os
import time
import xlwings as xw
from openpyxl import load_workbook
from openpyxl.styles import Font, PatternFill, Alignment, Border, Side

OUT_FILE = os.path.abspath("ADP_Interactive_Dashboard(updated)1.xlsx")

def build_xlsm():
    if os.path.exists(OUT_FILE):
        try:
            os.remove(OUT_FILE)
        except Exception as e:
            print("Could not remove existing file:", e)
            return

    app = xw.App(visible=False)
    try:
        wb = app.books.add()
        sht = wb.sheets[0]
        sht.name = "Overview"

        widths = [3, 20, 30, 3, 20, 20, 15, 15]
        for i, w in enumerate(widths, start=1):
            sht.api.Columns(i).ColumnWidth = w

        app.api.ActiveWindow.DisplayGridlines = True
        app.api.ActiveWindow.DisplayHeadings = False

        # Title
        header_color = (59, 89, 152)
        sht.range("B2:G3").merge()
        sht.range("B2").value = "PTD/YTD Results - USA"
        sht.range("B2").api.Font.Size = 18
        sht.range("B2").api.Font.Bold = True
        sht.range("B2").color = header_color
        sht.range("B2").api.Font.Color = 0xFFFFFF
        sht.range("B2").api.HorizontalAlignment = -4108
        sht.range("B2").api.VerticalAlignment = -4108

        # Client Info
        sht.range("B5:C9").color = (234, 242, 255)
        sht.range("B5:C5").merge(); sht.range("B5").value = "üë§ Client Information"
        sht.range("B5").api.Font.Size = 12
        sht.range("B5").api.Font.Bold = True
        sht.range("B5").api.Font.Color = 0xFFFFFF
        sht.range("B6").value = "Client Number:"; sht.range("C6").value = ""
        sht.range("B7").value = "Company Name:";  sht.range("C7").value = ""
        sht.range("B8").value = "Country:";       sht.range("C8").value = "USA"
        sht.range("B9").value = "Language:";      sht.range("C9").value = "English"

        # Contact
        sht.range("E5:G9").color = (234, 242, 255)
        sht.range("E5:G5").merge(); sht.range("E5").value = "üìû Contact Details"
        sht.range("E5").api.Font.Size = 12
        sht.range("E5").api.Font.Bold = True
        sht.range("E5").api.Font.Color = 0xFFFFFF
        sht.range("E6").value = "Name:"; sht.range("F6").value = ""; sht.range("F6:G6").merge()
        sht.range("E7").value = "Phone Number:"; sht.range("F7").value = ""; sht.range("F7:G7").merge()
        sht.range("E8").value = "Email:"; sht.range("F8").value = ""; sht.range("F8:G8").merge()
        sht.range("E9").value = "ADP Contact:"; sht.range("F9").value = ""; sht.range("F9:G9").merge()

        # Period
        sht.range("B11:C13").color = (234, 242, 255)
        sht.range("B11:C11").merge(); sht.range("B11").value = "üóìÔ∏è Period"
        sht.range("B11").api.Font.Size = 12
        sht.range("B11").api.Font.Bold = True
        sht.range("B11").api.Font.Color = 0x2F5496
        sht.range("B12").value = "Date Received:"; sht.range("C12").value = ""
        sht.range("B13").value = "Date Processed:"; sht.range("C13").value = ""

        # Transaction Overview
        sht.range("E11:G13").color = (234, 242, 255)
        sht.range("E11:G11").merge(); sht.range("E11").value = "üßæ Transaction Overview"
        sht.range("E11").api.Font.Size = 12
        sht.range("E11").api.Font.Bold = True
        sht.range("E11").api.Font.Color = 0x2F5496
        sht.range("E12").value = "Record Type"
        sht.range("F12").value = "Record Count"
        sht.range("G12").value = "Total Records"
        sht.range("G13").formula = "=SUM(F15:F1000)"

        # Add dummy records for testing
        records = [(f"Record {i}", i*10) for i in range(1, 21)]
        sht.range("E100:E119").value = [r[0] for r in records]
        sht.range("F100:F119").value = [r[1] for r in records]

        # Add helper cell for scroll index
        sht.range("H15").value = 1
        sht.range("H15").api.Font.Bold = True

        # Display first slice in visible area
        for i in range(15, 30):
            sht.range(f"E{i}").formula = f"=INDEX($E$100:$E$119,ROW()-14+$H$15-1)"
            sht.range(f"F{i}").formula = f"=INDEX($F$100:$F$119,ROW()-14+$H$15-1)"

        wb.sheets.add("Data").visible = False
        wb.save(OUT_FILE)
        wb.close()
    finally:
        app.quit()

    time.sleep(0.5)

    # Styling and protection
    wb2 = load_workbook(OUT_FILE)
    ws2 = wb2["Overview"]

    border = Border(left=Side(style='medium'), right=Side(style='medium'),
                    top=Side(style='medium'), bottom=Side(style='medium'))
    blue_fill = PatternFill("solid", fgColor="2F5496")
    gray_fill = PatternFill("solid", fgColor="D9D9D9")
    light_fill = PatternFill("solid", fgColor="F2F2F2")

    ws2.merge_cells("B2:G3")
    title = ws2["B2"]
    title.font = Font(size=20, bold=True, color="FFFFFF")
    title.fill = blue_fill
    title.alignment = Alignment(horizontal="center", vertical="center")

    # Lock all cells by default
    for row in ws2.iter_rows():
        for cell in row:
            cell.protection = cell.protection.copy(locked=True)

    # Unlock inputs
    input_cells = ["C6", "C7", "C12", "C13", "F6", "F7", "F8", "F9"]
    for c in input_cells:
        ws2[c].protection = ws2[c].protection.copy(locked=False)

    # üîë Unlock Transaction Overview visible list
    for row in range(15, 30):
        ws2[f"E{row}"].protection = ws2[f"E{row}"].protection.copy(locked=False)
        ws2[f"F{row}"].protection = ws2[f"F{row}"].protection.copy(locked=False)

    # Also unlock scroll index cell
    ws2["H15"].protection = ws2["H15"].protection.copy(locked=False)

    # Protect sheet
    ws2.protection.sheet = True
    ws2.protection.password = "adp123"
    ws2.protection.enable()

    wb2.save(OUT_FILE)
    wb2.close()

    print("‚úÖ Dashboard created with scrollable Transaction Overview")

if __name__ == "__main__":
    build_xlsm()
